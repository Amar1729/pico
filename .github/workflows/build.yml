name: Test and Build

on:
  workflow_dispatch:
  push:
    branches:
      - main
    tags:
      - v*
  pull_request:
    branches:
      - main

env:
  REGISTRY: ghcr.io

jobs:
  test:
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.19
    - name: Lint the codebase
      uses: golangci/golangci-lint-action@v2
      with:
        version: latest
        args: -E goimports -E godot
    - name: Run tests
      run: |
        go test -v ./... -cover -race -coverprofile=coverage.out
        go tool cover -func=coverage.out -o=coverage.out
  build:
    strategy:
      matrix:
        app: [prose, lists, pastes, imgs]
        target: [ssh, web]
    runs-on: ubuntu-22.04
    needs: test
    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
      with:
        platforms: all
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
      with:
        version: latest
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Collect image metadata
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.REGISTRY }}/${{ github.repository }}/${{ matrix.app }}-${{ matrix.target }}
    - name: Build and push
      uses: docker/build-push-action@v3
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        target: release-${{ matrix.target }}
        platform: |
          linux/amd64
          linux/arm64
        build-args: |
          APP=${{ matrix.app }}
